//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeaveModule.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class HRISEntities : DbContext
    {
        public HRISEntities()
            : base("name=HRISEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<vEmployeeCompleteField> vEmployeeCompleteFields { get; set; }
        public DbSet<tapp212Image> tapp212Image { get; set; }
        public DbSet<tLeaveBalanceForwarded> tLeaveBalanceForwardeds { get; set; }
        public DbSet<trefLeaveType> trefLeaveTypes { get; set; }
        public DbSet<trefLeaveLedgerCode> trefLeaveLedgerCodes { get; set; }
        public DbSet<tAttDTR> tAttDTRs { get; set; }
        public DbSet<tLeaveAppLedger> tLeaveAppLedgers { get; set; }
        public DbSet<tLeaveAppLedgerMaster> tLeaveAppLedgerMasters { get; set; }
        public DbSet<trefLeaveCreditForZeroVLCredit> trefLeaveCreditForZeroVLCredits { get; set; }
        public DbSet<trefLeaveCreditsEarned> trefLeaveCreditsEarneds { get; set; }
        public DbSet<trefLeaveWorkHoursConversionMatrix> trefLeaveWorkHoursConversionMatrices { get; set; }
        public DbSet<vLeaveMasterLedger> vLeaveMasterLedgers { get; set; }
        public DbSet<trefHoliday> trefHolidays { get; set; }
        public DbSet<vrefLeaveTypeAndAllotment> vrefLeaveTypeAndAllotments { get; set; }
        public DbSet<tLogDashboard> tLogDashboards { get; set; }
        public DbSet<vDeptOfficer> vDeptOfficers { get; set; }
        public DbSet<vApprvOfficer> vApprvOfficers { get; set; }
        public DbSet<trefLeaveAdministrator> trefLeaveAdministrators { get; set; }
        public DbSet<tLeaveApp> tLeaveApps { get; set; }
        public DbSet<vLeaveApp> vLeaveApps { get; set; }
        public DbSet<tappOffice> tappOffices { get; set; }
        public DbSet<tLeaveInutang> tLeaveInutangs { get; set; }
        public DbSet<trefLeaveAllotment> trefLeaveAllotments { get; set; }
    
        public virtual ObjectResult<spEmployeeLeaveBalance_Result> spEmployeeLeaveBalance(string eIC, Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd, string sbl, string stl, string ml, string pl, string spl, string slp, string rl, string vawc, string sel, string mone, string fl, string magnacarta)
        {
            var eICParameter = eIC != null ?
                new ObjectParameter("EIC", eIC) :
                new ObjectParameter("EIC", typeof(string));
    
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("dateBegin", dateBegin) :
                new ObjectParameter("dateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            var sblParameter = sbl != null ?
                new ObjectParameter("sbl", sbl) :
                new ObjectParameter("sbl", typeof(string));
    
            var stlParameter = stl != null ?
                new ObjectParameter("stl", stl) :
                new ObjectParameter("stl", typeof(string));
    
            var mlParameter = ml != null ?
                new ObjectParameter("ml", ml) :
                new ObjectParameter("ml", typeof(string));
    
            var plParameter = pl != null ?
                new ObjectParameter("pl", pl) :
                new ObjectParameter("pl", typeof(string));
    
            var splParameter = spl != null ?
                new ObjectParameter("spl", spl) :
                new ObjectParameter("spl", typeof(string));
    
            var slpParameter = slp != null ?
                new ObjectParameter("slp", slp) :
                new ObjectParameter("slp", typeof(string));
    
            var rlParameter = rl != null ?
                new ObjectParameter("rl", rl) :
                new ObjectParameter("rl", typeof(string));
    
            var vawcParameter = vawc != null ?
                new ObjectParameter("vawc", vawc) :
                new ObjectParameter("vawc", typeof(string));
    
            var selParameter = sel != null ?
                new ObjectParameter("sel", sel) :
                new ObjectParameter("sel", typeof(string));
    
            var moneParameter = mone != null ?
                new ObjectParameter("mone", mone) :
                new ObjectParameter("mone", typeof(string));
    
            var flParameter = fl != null ?
                new ObjectParameter("fl", fl) :
                new ObjectParameter("fl", typeof(string));
    
            var magnacartaParameter = magnacarta != null ?
                new ObjectParameter("magnacarta", magnacarta) :
                new ObjectParameter("magnacarta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEmployeeLeaveBalance_Result>("spEmployeeLeaveBalance", eICParameter, dateBeginParameter, dateEndParameter, sblParameter, stlParameter, mlParameter, plParameter, splParameter, slpParameter, rlParameter, vawcParameter, selParameter, moneParameter, flParameter, magnacartaParameter);
        }
    
        public virtual ObjectResult<spLeaveCardGenerate_Result> spLeaveCardGenerate(string eIC)
        {
            var eICParameter = eIC != null ?
                new ObjectParameter("EIC", eIC) :
                new ObjectParameter("EIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLeaveCardGenerate_Result>("spLeaveCardGenerate", eICParameter);
        }
    
        [EdmFunction("HRISEntities", "fnLeaveLedgerGenerator")]
        public virtual IQueryable<fnLeaveLedgerGenerator_Result> fnLeaveLedgerGenerator(string eIC)
        {
            var eICParameter = eIC != null ?
                new ObjectParameter("EIC", eIC) :
                new ObjectParameter("EIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnLeaveLedgerGenerator_Result>("[HRISEntities].[fnLeaveLedgerGenerator](@EIC)", eICParameter);
        }
    }
}
